syntax = "proto3"; // Версия Protocol Buffers

option csharp_namespace = "DataBus.Grpc"; // Пространство имён для C#

// Сервис (определяет RPC-методы)
service DataBusService {
  rpc Publish (EventMessage) returns (PublishResponse);  // Обычный запрос-ответ
  rpc Subscribe (SubscriptionRequest) returns (stream EventMessage); // Серверный поток
}










// Сообщение для публикации события
message EventMessage {
  string event_id = 1;  // Уникальный ID события
  string event_type = 2; // Тип события (например, "OrderCreated")
  bytes payload = 3; // Бинарные данные (сериализованные)
  string source = 4; // Источник события
  int64 timestamp = 5; // Unix-время
}

// Ответ после публикации
message PublishResponse {
  bool success = 1;  // Статус операции
  string message = 2;  // Описание ошибки (если success=false)
}

// Запрос на подписку
message SubscriptionRequest {
  repeated string event_types = 1;  // Типы событий для подписки
  string consumer_id = 2;   // ID клиента
}









service ChatService { 
	// Серверная часть: принимает сообщения от клиентов
  rpc SendMessage (MessageRequest) returns (MessageResponse) {}
  // Клиентская часть: запрашивает данные у другого сервиса
  rpc GetMessages (GetMessagesRequest) returns (stream MessageResponse) {}}


message MessageRequest {
  string text = 1;
}

message MessageResponse {
  string id = 1;
  string text = 2;
}

message GetMessagesRequest {
  int32 limit = 1;
}